{
  "openapi": "3.0.0",
  "info": {
    "title": "forum app API",
    "version": "1.0.0"
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "https",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "required": ["username", "email", "password"],
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          },
          "tokens": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "profileImage": {
            "type": "string"
          }
        }
      },
      "Post": {
        "type": "object",
        "required": ["description", "posterId"],
        "properties": {
          "description": {
            "type": "string"
          },
          "posterId": {
            "type": "string",
            "format": "objectId"
          },
          "publishTime": {
            "type": "string",
            "format": "date-time"
          },
          "imageUrls": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Comment": {
        "type": "object",
        "required": ["content", "commentorId", "postId"],
        "properties": {
          "content": {
            "type": "string"
          },
          "commentorId": {
            "type": "string",
            "format": "objectId"
          },
          "postId": {
            "type": "string",
            "format": "objectId"
          }
        }
      },
      "Like": {
        "type": "object",
        "required": ["userId", "postId"],
        "properties": {
          "userId": {
            "type": "string",
            "format": "objectId"
          },
          "postId": {
            "type": "string",
            "format": "objectId"
          }
        }
      },
      "Goal": {
        "type": "object",
        "required": ["name", "creatorId"],
        "properties": {
          "name": {
            "type": "string"
          },
          "completed": {
            "type": "boolean",
            "default": false
          },
          "creatorId": {
            "type": "string",
            "format": "objectId"
          },
          "steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Step"
            }
          }
        }
      },
      "Step": {
        "type": "object",
        "required": ["description", "goal"],
        "properties": {
          "description": {
            "type": "string"
          },
          "completed": {
            "type": "boolean",
            "default": false
          },
          "goal": {
            "type": "string",
            "format": "objectId"
          }
        }
      }
    }
  },
  "paths": {
    "/users": {
      "get": {
        "summary": "Get a list of all users",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "summary": "Get a specific user by ID",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "summary": "Update a specific user",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (e.g., invalid input)"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a specific user by id",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/posts": {
      "post": {
        "summary": "Create a new post",
        "tags": ["Posts"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Post created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message"
                    },
                    "post": {
                      "$ref": "#/components/schemas/Post"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (missing or invalid data)"
          }
        }
      },
      "get": {
        "summary": "Get all posts",
        "tags": ["Posts"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of posts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Post"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts/poster/{posterId}": {
      "get": {
        "summary": "Get posts by poster ID",
        "tags": ["Posts"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "posterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of posts by poster",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Post"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Poster not found"
          }
        }
      }
    },
    "/posts/{id}": {
      "get": {
        "summary": "Get a post by post ID",
        "tags": ["Posts"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "404": {
            "description": "Post not found"
          }
        }
      },
      "put": {
        "summary": "Update a post by ID",
        "tags": ["Posts"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "The updated content of the post"
                  },
                  "imageUrls": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Image URLs for the post"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Post updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (e.g., invalid input)"
          },
          "404": {
            "description": "Post not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a post",
        "tags": ["Posts"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Post deleted successfully"
          },
          "404": {
            "description": "Post not found"
          }
        }
      }
    },
    "/comments": {
      "post": {
        "summary": "Create a new comment",
        "tags": ["Comments"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["content", "commentorId", "postId"],
                "properties": {
                  "content": {
                    "type": "string",
                    "description": "The content of the comment"
                  },
                  "commentorId": {
                    "type": "string",
                    "description": "The ID of the comment creator",
                    "format": "objectId"
                  },
                  "postId": {
                    "type": "string",
                    "description": "The ID of the post the comment belongs to",
                    "format": "objectId"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Comment saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message"
                    },
                    "comment": {
                      "$ref": "#/components/schemas/Comment"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all comments",
        "tags": ["Comments"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of all comments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Comment"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/comments/{id}": {
      "get": {
        "summary": "Get a comment by ID",
        "tags": ["Comments"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The comment object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "404": {
            "description": "Comment not found"
          }
        }
      },
      "put": {
        "summary": "Update a comment",
        "tags": ["Comments"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string",
                    "description": "The new content for the comment"
                  }
                },
                "required": ["content"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Comment updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (e.g., invalid input)"
          },
          "404": {
            "description": "Comment not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a comment",
        "tags": ["Comments"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Comment deleted successfully"
          },
          "404": {
            "description": "Comment not found"
          }
        }
      }
    },
    "/comments/post/{postId}": {
      "get": {
        "summary": "Get comments for a specific post",
        "tags": ["Comments"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of comments for the post",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Comment"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Post not found"
          }
        }
      }
    },
    "/likes": {
      "post": {
        "summary": "Create a new like",
        "tags": ["Likes"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Like"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Like created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Like"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (missing or invalid data)"
          }
        }
      },
      "get": {
        "summary": "Get all likes",
        "tags": ["Likes"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of likes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Like"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/likes/post/{postId}": {
      "get": {
        "summary": "Get likes for a specific post",
        "tags": ["Likes"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of likes for the post",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Like"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/likes/user/{userId}/post/{postId}": {
      "delete": {
        "summary": "Delete a like by user ID and post ID",
        "tags": ["Likes"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          },
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Like deleted successfully"
          },
          "404": {
            "description": "Like not found"
          }
        }
      }
    },
    "/goals": {
      "post": {
        "summary": "Create a new goal",
        "tags": ["Goals"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Goal"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Goal created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Goal"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (missing or invalid data)"
          }
        }
      },
      "get": {
        "summary": "Get all goals",
        "tags": ["Goals"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of goals",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Goal"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/goals/{id}": {
      "get": {
        "summary": "Get a goal by ID",
        "tags": ["Goals"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Goal details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Goal"
                }
              }
            }
          },
          "404": {
            "description": "Goal not found"
          }
        }
      },
      "put": {
        "summary": "Update a goal by ID",
        "tags": ["Goals"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the goal"
                  },
                  "completed": {
                    "type": "boolean",
                    "description": "Whether the goal is completed"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Goal updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Goal"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (e.g., invalid input)"
          },
          "404": {
            "description": "Goal not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a goal",
        "tags": ["Goals"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Goal deleted successfully"
          },
          "404": {
            "description": "Goal not found"
          }
        }
      }
    },
    "/goals/user/{userId}": {
      "get": {
        "summary": "Get goals for a specific user",
        "tags": ["Goals"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of goals for the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Goal"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/steps": {
      "post": {
        "summary": "Create a new step",
        "tags": ["Steps"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Step"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Step created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Step"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (missing or invalid data)"
          }
        }
      },
      "get": {
        "summary": "Get all steps",
        "tags": ["Steps"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of steps",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Step"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/steps/{id}": {
      "get": {
        "summary": "Get a step by ID",
        "tags": ["Steps"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Step details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Step"
                }
              }
            }
          },
          "404": {
            "description": "Step not found"
          }
        }
      },
      "put": {
        "summary": "Update a step by ID",
        "tags": ["Steps"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "The description of the step"
                  },
                  "completed": {
                    "type": "boolean",
                    "description": "Whether the step is completed"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Step updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Step"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (e.g., invalid input)"
          },
          "404": {
            "description": "Step not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a step",
        "tags": ["Steps"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Step deleted successfully"
          },
          "404": {
            "description": "Step not found"
          }
        }
      }
    },
    "/steps/goal/{goalId}": {
      "get": {
        "summary": "Get steps for a specific goal",
        "tags": ["Steps"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "goalId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of steps for the goal",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Step"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (e.g., invalid goal ID)"
          },
          "403": {
            "description": "Forbidden (e.g., trying to access another user's goal)"
          },
          "404": {
            "description": "Goal not found"
          }
        }
      }
    },
    "/guru": {
      "post": {
        "summary": "Create or update a goal with AI assistance",
        "tags": ["Guru"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "prompt": {
                    "type": "string",
                    "description": "The user's natural language prompt about their goal"
                  },
                  "goalId": {
                    "type": "string",
                    "description": "The ID of an existing goal (optional)",
                    "format": "objectId"
                  },
                  "history": {
                    "type": "array",
                    "description": "Previous conversation history with the AI (optional)",
                    "items": {
                      "type": "object",
                      "properties": {
                        "role": {
                          "type": "string",
                          "enum": ["user", "assistant"]
                        },
                        "content": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "required": ["prompt"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Goal created or updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "steps": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Step"
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the goal"
                    },
                    "_id": {
                      "type": "string",
                      "description": "The ID of the goal",
                      "format": "objectId"
                    },
                    "message": {
                      "type": "string",
                      "description": "A friendly message from the AI assistant"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (e.g., empty prompt)"
          },
          "404": {
            "description": "Goal not found when updating an existing goal"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["username", "email", "password"],
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "Username for the new account"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Email address for the new account"
                  },
                  "password": {
                    "type": "string",
                    "description": "Password for the new account"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    },
                    "token": {
                      "type": "string",
                      "description": "JWT authentication token"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (e.g., validation error, user already exists)"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login to an existing account",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address"
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    },
                    "token": {
                      "type": "string",
                      "description": "JWT authentication token"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Logout from the current session",
        "tags": ["Authentication"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logout successful"
          },
          "401": {
            "description": "Unauthorized (not logged in)"
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "summary": "Get the current authenticated user's profile",
        "tags": ["Authentication"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (not logged in)"
          }
        }
      }
    }
  }
}
